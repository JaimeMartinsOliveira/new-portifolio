version: '3.8'

services:
  web:
    build: .
    container_name: portfolio_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8001"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: portfolio_db
    volumes:
      - portfolio_postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api:v2.1.1
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - evolution_instances:/evolution/instances
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: evo_postgres
    image: postgres:15
    command: ["postgres", "-c", "max_connections=1000"]
    restart: always
    environment:
      POSTGRES_USER: ${EVO_POSTGRES_USER}
      POSTGRES_PASSWORD: ${EVO_POSTGRES_PASSWORD}
      POSTGRES_DB: ${EVO_POSTGRES_DB}
    volumes:
      - evolution_postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:latest
    container_name: portfolio_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web

volumes:
  portfolio_postgres_data:
  evolution_postgres_data:
  static_volume:
  media_volume:
  evolution_instances:
  redis_data: